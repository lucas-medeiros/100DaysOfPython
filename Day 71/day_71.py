# @author   Lucas Cardoso de Medeiros
# @since    01/08/2023
# @version  1.0


# Data Exploration with Pandas: College Major v.s. Your Salary


# -*- coding: utf-8 -*-
"""Day 71.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1N_uZyfOnmsylZWiDcbCbX4gLGcKXRWqV
"""

import pandas as pd

df = pd.read_csv('salaries_by_college_major.csv')

# Print first 5 rows of dataframe
df.head()

# 51 rows & 6 columns
df.shape

# All the label os the columns
df.columns

# Check if there is any junk data
df.isna()

# Print last 5 rows of dataframe
df.tail()

# Delete rows with NaN values
clean_df = df.dropna()
clean_df.tail()

# Access columns in dataframe
clean_df['Starting Median Salary']

# highest starting salary
clean_df['Starting Median Salary'].max()

# Index of highest starting salary
clean_df['Starting Median Salary'].idxmax()

# name of the major that corresponds to that particular row
clean_df['Undergraduate Major'].loc[43]
clean_df['Undergraduate Major'][43]

# get the entire row
clean_df.loc[43]

# What college major has the highest mid-career salary? How much do graduates with this major earn? (Mid-career is
# defined as having 10+ years of experience).
max_mid_career_salary = clean_df['Mid-Career Median Salary'].idxmax()

print(
    f"What college major has the highest mid-career salary? -> {clean_df['Undergraduate Major'].loc[max_mid_career_salary]}")
print(
    f"How much do graduates with this major earn? -> {clean_df['Mid-Career Median Salary'].loc[max_mid_career_salary]}")

# Which college major has the lowest starting salary and how much do graduates earn after university?
lowest_starting_salary = clean_df['Starting Median Salary'].idxmin()

print(
    f"Which college major has the lowest starting salary? -> {clean_df['Undergraduate Major'].loc[lowest_starting_salary]}")
print(
    f"How much do graduates earn after university? -> {clean_df['Starting Median Salary'].loc[lowest_starting_salary]}")

# Which college major has the lowest mid-career salary and how much can people expect to earn with this degree?
lowest_mid_career_salary = clean_df['Mid-Career Median Salary'].idxmin()

print(
    f"Which college major has the lowest mid-career salary? -> {clean_df['Undergraduate Major'].loc[lowest_mid_career_salary]}")
print(
    f"How much can people expect to earn with this degree?? -> {clean_df['Mid-Career Median Salary'].loc[lowest_mid_career_salary]}")

# Lowest Risk Majors
spread_col = clean_df['Mid-Career 90th Percentile Salary'].subtract(clean_df['Mid-Career 10th Percentile Salary'])
clean_df.insert(1, 'Spread', spread_col)
clean_df.head()

# Sort by the lowest spread
low_risk = clean_df.sort_values('Spread')
low_risk[['Undergraduate Major', 'Spread']].head()

# Sort by the highest spread
low_risk = clean_df.sort_values('Spread', ascending=False)
low_risk[['Undergraduate Major', 'Spread']].head()

# Majors with the Highest Potential
highest_potential = clean_df.sort_values('Mid-Career 90th Percentile Salary', ascending=False)
highest_potential[['Undergraduate Major', 'Mid-Career 90th Percentile Salary']].head()

# Majors with the Greatest Spread in Salaries
highest_spread = clean_df.sort_values('Spread', ascending=False)
highest_spread[['Undergraduate Major', 'Spread']].head()

# Grouping data
clean_df.groupby('Group').count()

# Average salary by group?
pd.options.display.float_format = '{:.2f}'.format
clean_df.groupby('Group').mean()
